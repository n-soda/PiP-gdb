# $RIKEN_copyright: 2018 Riken Center for Computational Sceience,
# 	  System Software Devlopment Team. All rights researved$
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

if { [skip_pip_tests] } { return -1 }

set testfile    threads
set executable  gdb_test
set executable2 sleep
set srcfile     ${srcdir}/${subdir}/${executable}.c
set srcfile2    ${srcdir}/${subdir}/${executable2}.c
set binfile     ${objdir}/${subdir}/${executable}
set binfile2    ${objdir}/${subdir}/${executable2}
set flags	[concat "debug" [list "additional_flags=${pipcc_flags}" ]]

if { [gdb_compile ${srcfile}  ${binfile}  executable "${flags}" ] != ""} {
    untested "Could not compile ${binfile} w/ ${flags}."
    return -1
}

if { [gdb_compile ${srcfile2} ${binfile2} executable "${flags}"] != "" } {
    untested "Could not compile ${binfile2} w/ ${flags}."
    return -1
}
# PiP-v1 does not have unpie
if { [ file exists ${pip_unpie} ] == 1 } then {
    exec ${pip_unpie} ${binfile2}
}

set env(PIP_MODE) pthread
set rootpid [eval exec $binfile &]

# The process must be spawned.
exec sleep 5

set use_gdb_stub 0
set timeout 120
global gdb_prompt
set gdb_prompt "\[(\]pip-gdb\[)\]"

set test "attach to PIP task"

gdb_exit
gdb_start

# gdb_test "set pip-auto-attach on" ""

# Attach test.
gdb_test "attach ${rootpid}" ".*Attaching to process $rootpid.*"

# info threads test.
gdb_test "info threads" ".*  2 .* Thread .*"

gdb_test "thread 2" ".*Switching to thread 2.*"

gdb_test "info threads" ".*\\* 2 .* Thread .*"

# Detach test.
gdb_test "detach" "process $rootpid.*"

# The process must be exit.
exec sleep 10
exec -ignorestderr -- ${pips} -k -f $rootpid

return 0
